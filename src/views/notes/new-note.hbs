<div class="col-md-4 mx-auto px-0">
  <div class="card">
    <div class="card-header text-center">
      <h3>New Note</h3>
    </div>
		<div class="card-body">
		  <div>
			<div class="form-group">
			  <input type="text" name="title" class="form-control" placeholder="Title" autofocus/>
			</div>
			<div class="form-group">
				<div class="ce-example">
					<div class="ce-example__content _ce-example__content--small">
						<div id="editornote"  name="description" style="padding-bottom: 200px;"></div>
					</div>
				</div>
			</div>
			<div class="form-group">
			 <div class="input-group custom-search">
   <input id="tagadd" type="text" class="form-control custom-search-input" placeholder="Tag can them">
   <div id="tagbutton" class="btn btn-outline-primary custom-search-botton" type="botton">Thêm</div>  
 </div>
			</div>
			<div class="form-group" style="margin-bottom: 0!important;">
			<div class="post" id="taglist">
			<ul class="tags">
			</ul> 
			</div>
			</div>
			<div class="form-group">
			  <button id="saveButton" class="btn btn-primary btn-block" id="saveButton">
				Save
			  </button>
			</div>
			<div class="ce-example__output">
				  <pre class="ce-example__output-content" id="output"></pre>
				  <div class="ce-example__output-footer">
					<a href="http://wotech.vn" style="font-weight: bold;">Made by DangKhoi</a>
				  </div>
			</div>
		</div>
		</div>    
  </div>
</div>
<script>
	<!-- thêm code xử lí tag -->	
	var taglist = [];
	var taglistid = [];
	var tagsvg = '<svg onclick="myFunction(this)" width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-square" fill="currentColor" xmlns="http://www.w3.org/2000/svg">' + '<path fill-rule="evenodd" d="M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>' + '<path fill-rule="evenodd" d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>' + '</svg>'
	var tagAction = [];
	function getTimeClient() {
	  var d = new Date();
	  var n = d.getTime();
	  return n;
		}
    document.getElementById('tagbutton').addEventListener('click', function () {
		console.log(taglist);
		var tag = $('#tagadd').val();
		tagAction.push({"location":"new","name":"add","tag":tag, "timeClient":getTimeClient()});
		console.log('tagAction ' + JSON.stringify(tagAction));
		const refindTaglist = taglist.find(obj => {
				return obj.tag == tag
			});
		if(refindTaglist === undefined ) {
		$.ajax({
              type : 'POST', //Sử dụng kiểu gửi dữ liệu POST
              url : '/tag/create-tag', //gửi dữ liệu sang trang data.php
              data : {"tagadd": tag},//dữ liệu sẽ được gửi
              success : function(data)  // Hàm thực thi khi nhận dữ liệu được từ server
                        { 
                           if(data.status == 'already') 
                           {
                             console.log("Đã tồn tại trên server " +  data.content.tag);
                           }else{
								console.log('Tạo mới' + data);	
                           };
						   console.log('them tag');
							$('.tags').append('<li ' + 'id=' + data.content._id + '><a href="#">' + data.content.tag + '</a>' + tagsvg + '</li>');
							taglist.push(data.content);
							taglistid.push(data.content._id);
                        },
			error: function () {
				console.log('error');
			  },
			  complete: function () {
				console.log('complete');
			  }
              });
		}else{
				console.log('đã thêm ' + tag + ' khong them lai');	
            };
		$('#tagadd').val('');
      });
	function myFunction(obj) {
		console.log(obj.parentElement.id);
		var ulele = obj.parentElement
		//lấy tên Tag bị xóa
		var nametag;
		ulele.childNodes.forEach( 
  			function(currentValue) { 
  				if(currentValue.nodeName == "A"){
	  				nametag = (currentValue.childNodes[0]);
	  				}
  			}
		);
		console.log(nametag);
		tagAction.push({"location":"new","name":"remove","tag":nametag.nodeValue.trim(),"timeClient":getTimeClient()});
		console.log('tagAction ' + JSON.stringify(tagAction));

		function removeA(arr) {
			var what, a = arguments, L = a.length, ax;
			while (L > 1 && arr.length) {
				what = a[--L];
				while ((ax= arr.indexOf(what)) !== -1) {
					arr.splice(ax, 1);
				}
			}
			return arr;
		};
		const refinddeTaglist = taglist.find(obj => {
				return obj._id == ulele.id
			});
		removeA(taglist, refinddeTaglist);
		removeA(taglistid, ulele.id);
		console.log('taglistid ' + taglistid);
		ulele.remove();

	};
  </script>
<script>
	<!-- Xử lí tag Khi nhập liệu -->
	const tagInput = document.getElementById('tagadd');
	tagInput.onkeydown = function(Event) {
    if (Event.keyCode == 32 ) {
      console.log('hihoha');
    }};
	tagInput.onkeydown = function(oaEvent) {
      console.log(oaEvent.keyCode);
   };
tagInput.addEventListener("keyup", event => {
    if(event.key !== "A") console.log("enterere"); // Use `.key` instead.
    console.log(event.key);
console.log(event.which);	// Things you want to do.
    event.preventDefault(); // No need to `return false;`.
});
tagInput.onkeypress=function(e){
    if(e.keyCode==66){
       console.log("cgfds");
    }
};
</script>
 <script>

    var editor = new EditorJS({
		holderId: 'editornote',
		tools: tool,
		i18n: il8n,
		data: {},
		onReady: function(){
		editoronReady();
			//saveButton.click();
		}
	});
</script>
<script>
	<!-- thêm code gửi dữ liệu khi nhấn nút -->
	const saveButton = document.getElementById('saveButton');
    saveButton.addEventListener('click', function () {
    	var status = new Boolean(true);
      editor.save().then((savedData) => {
        cPreview.show(savedData, document.getElementById("output"));
		var title = $('input[name="title"]').val();
        $.ajax({
              type : 'POST', //Sử dụng kiểu gửi dữ liệu POST
              url : '/notes/new-note', //gửi dữ liệu sang trang data.php
              data : {"title": title, "description":JSON.stringify(savedData),"tag":taglistid, "status": status, "tagAction":tagAction},//dữ liệu sẽ được gửi
              success : function(data)  // Hàm thực thi khi nhận dữ liệu được từ server
                        { 
                        	console.log(data);
                           if(data == 'false') 
                           {
                             alert('Không có người dùng');
                           }else{
                           	if(data.loi == "101" ){
                           		alert("Có lỗi xảy ra");
                           		console.log(data.errors);
                           		window.location = "/notes/add"
                           	} else {
                           	alert("Về Note");
                           	console.log('Gửi thành công' + title);
							 window.location = "/notes";
                           }}
                        }
              });
      });
    });
  </script>

