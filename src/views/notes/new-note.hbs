<div class="col-md-4 mx-auto">
  <div class="card text-center">
    <div class="card-header">
      <h3>New Note</h3>
    </div>
    <div class="card-body">
      <form action="/notes/new-note" method="POST">
        <div class="form-group">
          <input type="text" name="title" class="form-control" placeholder="Title" autofocus/>
        </div>
        <div class="form-group">
          <textarea name="description" class="form-control" placeholder="Description"></textarea>
        </div>
        <div class="form-group">
          <button class="btn btn-primary btn-block" type="submit">
            Save
          </button>
        </div>
	<div class="ce-example__content _ce-example__content--small">
      <div id="editorjs"></div>

      <div class="ce-example__button" id="saveButton">
        editor.save()
      </div>
    </div>
</form>
    </div>    
</div>
</div>

  <!-- Load Tools -->

  <script src="https://cdn.jsdelivr.net/npm/@editorjs/header@latest"></script><!-- Header -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/simple-image@latest"></script><!-- Simple image -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/delimiter@latest"></script><!-- Delimiter -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/list@latest"></script><!-- List -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/checklist@latest"></script><!-- Checklist -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/quote@latest"></script><!-- Quote -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/code@latest"></script><!-- Code -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/embed@latest"></script><!-- Embed -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/table@latest"></script><!-- Table -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/link@latest"></script><!-- Link -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/warning@latest"></script><!-- Warning -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/marker@latest"></script><!-- Marker -->
  <script src="https://cdn.jsdelivr.net/npm/@editorjs/inline-code@latest"></script><!-- Inline Code -->
  
  
<script src="https://cdn.jsdelivr.net/npm/@editorjs/underline@latest"></script><!-- Underline -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/raw@latest"></script><!-- raw HTML code -->
<script src="https://cdn.jsdelivr.net/npm/editorjs-alert@latest"></script><!-- Alert messages -->
<script src="https://cdn.jsdelivr.net/npm/editorjs-header-with-anchor@latest"></script><!-- Heading anchor -->
<script src="https://cdn.jsdelivr.net/npm/editorjs-paragraph-with-alignment@latest"></script><!-- Tool alignment -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/attaches@latest"></script><!-- Attaches Tool --> 
<script src="https://cdn.jsdelivr.net/npm/editorjs-github-gist-plugin@latest"></script><!-- Github Gist --> 
<script src="https://cdn.jsdelivr.net/npm/editorjs-social-post-plugin@latest"></script><!-- Social Post --> 
<script src="https://cdn.jsdelivr.net/npm/editorjs-drag-drop@latest"></script><!-- Drag/Drop --> 
<script src="https://cdn.jsdelivr.net/npm/editorjs-undo@latest"></script><!-- Undo --> 

  <!-- Load Editor.js's Core -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/editorjs@latest"></script>

  <!-- Initialization -->
  <script>
    const saveButton = document.getElementById('saveButton');
<!-- Cấu hình -->
    var editor = new EditorJS({
	
      holder: 'editorjs',
      tools: {
		 underline: Underline,
		 raw: RawTool,
		 alert: Alert,
		 attaches: {
		  class: AttachesTool,
		  config: {
			endpoint: 'http://localhost:8008/uploadFile'
		  }
		},
		gist: Gist,
		socialPost: SocialPost,
		paragraph: {
        config: {
          placeholder: "Enter something"
        }
      },
        header: {
          class: Header,
          inlineToolbar: ['link'],
          config: {
            placeholder: 'Header'
          },
          shortcut: 'CMD+SHIFT+H'
        },
        image: SimpleImage,
        list: {
          class: List,
          inlineToolbar: true,
          shortcut: 'CMD+SHIFT+L'
        },
        checklist: {
          class: Checklist,
          inlineToolbar: true,
        },
        quote: {
          class: Quote,
          inlineToolbar: true,
          config: {
            quotePlaceholder: 'Enter a quote',
            captionPlaceholder: 'Quote\'s author',
          },
          shortcut: 'CMD+SHIFT+O'
        },
        warning: Warning,
        marker: {
          class:  Marker,
          shortcut: 'CMD+SHIFT+M'
        },
        code: {
          class:  CodeTool,
          shortcut: 'CMD+SHIFT+C'
        },
        delimiter: Delimiter,
        inlineCode: {
          class: InlineCode,
          shortcut: 'CMD+SHIFT+C'
        },
        linkTool: LinkTool,
        embed: Embed,
        table: {
          class: Table,
          inlineToolbar: true,
          shortcut: 'CMD+ALT+T'
        },
      },
	  
	  <!-- Phần dịch chức năng -->
	  i18n: {
      messages: {
        "ui": {
          "blockTunes": {
            "toggler": {
              "Click to tune": "Bấm để điều chỉnh",
              "or drag to move": "hoặc kéo để di chuyển"
            },
          },
          "inlineToolbar": {
            "converter": {
              "Convert to": "Chuyển đổi sang"
            }
          },
          "toolbar": {
            "toolbox": {
              "Add": "Thêm"
            }
          }
        },
        "toolNames": {
          "Text": "Параграф",
          "Heading": "Заголовок",
          "List": "Danh sách",
          "Warning": "Примечание",
          "Checklist": "Чеклист",
          "Quote": "Цитата",
          "Code": "Код",
          "Delimiter": "Разделитель",
          "Raw HTML": "HTML-фрагмент",
          "Table": "Bảng",
          "Link": "Ссылка",
          "Marker": "Маркер",
          "Bold": "Полужирный",
          "Italic": "Курсив",
          "InlineCode": "Моноширинный",
          "Image": "Ảnh"
        },
        "tools": {
          "warning": {
            "Title": "Название",
            "Message": "Сообщение",
          },
          "link": {
            "Add a link": "Вставьте ссылку"
          },
          "stub": {
            'The block can not be displayed correctly.': 'Блок не может быть отображен'
          },
          "image": {
            "Caption": "Подпись",
            "Select an Image": "Выберите файл",
            "With border": "Добавить рамку",
            "Stretch image": "Растянуть",
            "With background": "Добавить подложку",
          },
          "code": {
            "Enter a code": "Код",
          },
          "linkTool": {
            "Link": "Ссылка",
            "Couldn't fetch the link data": "Не удалось получить данные",
            "Couldn't get this link data, try the other one": "Не удалось получить данные по ссылке, попробуйте другую",
            "Wrong response format from the server": "Неполадки на сервере",
          },
          "header": {
            "Header": "Заголовок",
          },
          "paragraph": {
            "Enter something": "Введите текст"
          },
          "list": {
            "Ordered": "Нумерованный",
            "Unordered": "Маркированный",
          }
        },
        "blockTunes": {
          "delete": {
            "Delete": "Удалить"
          },
          "moveUp": {
            "Move up": "Переместить вверх"
          },
          "moveDown": {
            "Move down": "Переместить вниз"
          }
        },
      }
    },
	<!-- Dữ liệu -->
      data: {
        blocks: [
          {
            type: "header",
            data: {
              text: "Editor.js",
              level: 2
            }
          },
          {
            type : 'paragraph',
            data : {
              text : 'Hey. Meet the new Editor. On this page you can see it in action — try to edit this text. Source code of the page contains the example of connection and configuration.'
            }
          },
          {
            type: 'image',
            data: {
              url: 'assets/codex2x.png',
              caption: '',
              stretched: false,
              withBorder: true,
              withBackground: false,
            }
          },
        ]
      },
      onReady: function(){
        saveButton.click();
		new DragDrop(editor);
		const undo = new Undo({ editor });
		undo.initialize(initialData);
      },
      onChange: function() {
        console.log('something changed');
      }
    });

    /**
     * Saving example
     */
    saveButton.addEventListener('click', function () {
      editor.save().then((savedData) => {
        cPreview.show(savedData, document.getElementById("output"));
      });
    });
  </script>
