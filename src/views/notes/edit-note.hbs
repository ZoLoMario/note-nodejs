{{#each errors}}
<div class="alert alert-danger alert-dismissible fade show" role="alert">
  {{text}}
  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
    <span aria-hidden="true">&times;</span>
  </button>
</div>
{{/each}}

<div class="col-md-8 mx-auto">
  <div class="card">
    <div class="card-header">
      <h3>Edit Note</h3>
    </div>
    <div class="card-body">
      <div>
        <input type="hidden" name="_method" value="PUT">
        <div class="form-group">
          <input type="text" name="title" class="form-control" value="{{note.title}}">
        </div>

	<div class="form-group">
		<div class="ce-example">
			<div class="ce-example__content _ce-example__content--small">
				<div id="{{note._id}}"  name="description" style="padding-bottom: 0px;"></div>
			</div>
		</div>
	</div>
	 <div class="form-group">
      {{#note.file}}
      {{#if this.oldname}}  
      {{#isNull  this.mimetype }}  
           {{else}}
              {{#equals  this.mimetype 'image/png' 'image/png' }}
                   <div class="form-group"> <img class="imagefile" src="/public/up/{{_id}}"></div>
                {{else}}
                     <li><a href="/public/up/{{_id}}">{{this.oldname}}</a></li>
              {{/equals}} 
      {{/isNull}} 
      {{/if}}
    {{/note.file}}
  </div>
	<div class="form-group">
		<div class="input-group custom-search">
			<input id="tagadd" type="text" class="form-control custom-search-input" placeholder="Tag can them">
			<div id="tagbutton" class="btn btn-outline-primary custom-search-botton" type="botton">Thêm</div>  
		</div>
	</div>
	<div class="form-group" style="margin-bottom: 0!important;">
		<div class="post" id="taglist">
		
			<ul class="tags">
			<script>
				var taglist = [];
				var taglistid = [];
				var removeTaglist = [];
				var nodeid = "{{note._id}}" ;
			 </script>
			{{# note.tag}}
            <li id="{{this._id}}"><a href="#"> {{this.tag}}</a>
			<svg onclick="myFunction(this)" width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-square" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
				<path fill-rule="evenodd" d="M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
				<path fill-rule="evenodd" d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
			</svg>
			<script>
				console.log("{{this.tag}}");
				taglistid.push("{{this._id}}");
				taglist.push("{{this.tag}}");
			 </script>
			</li>
			{{/note.tag}}
			</ul> 
		</div>
	</div>
    <div class="form-group">
        <div id="saveEditButton" class="btn btn-primary btn-block" type="submit">
            Save
        </div>
    </div>

			<div class="ce-example__output">
				  <pre class="ce-example__output-content" id="output"></pre>
				  <div class="ce-example__output-footer">
					<a href="http://wotech.vn" style="font-weight: bold;">Made by DangKhoi</a>
				  </div>
			</div>

      </div>
    </div>
  </div>
</div>
 <script>
	//phần hoạt động local thêm code xử lí tag 
	//hàm xử lý hoạt động thêm tag

	var tagAction = [];
	function getTimeClient() {
	  var d = new Date();
	  var n = d.getTime();
	  return n;
		}
    document.getElementById('tagbutton').addEventListener('click', function () {
    	var tagsvg = '<svg onclick="myFunction(this)" width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-square" fill="currentColor" xmlns="http://www.w3.org/2000/svg">' + '<path fill-rule="evenodd" d="M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>' + '<path fill-rule="evenodd" d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>' + '</svg>';
			var tag = $('#tagadd').val();
			tagAction.push({"location":"edit","name":"add","tag":tag, "timeClient":getTimeClient()});
			console.log('tagAction ' + JSON.stringify(tagAction));
		//gửi nhận dữ liệu lên server
		console.log('tagList ' + JSON.stringify(taglist));
		if(!(taglist.includes(tag))) {
		$.ajax({
              type : 'POST', //Sử dụng kiểu gửi dữ liệu POST
              url : '/tag/create-tag', //gửi dữ liệu sang trang data.php
              data : {"tagadd": tag},//dữ liệu sẽ được gửi
              success : function(data)  // Hàm thực thi khi nhận dữ liệu được từ server
                        { 
                           if(data.status == 'already') 
                           {
                             console.log("Đã tồn tại trên server " +  data.content.tag);
                           } else {
								console.log('Tạo mới' + data);	
                           };
							$('.tags').append('<li ' + 'id=' + data.content._id + '><a href="#">' + data.content.tag + '</a>' + tagsvg + '</li>');
							taglist.push(data.content.tag);
							taglistid.push(data.content._id);
							console.log('tag ID ' + taglistid);
                        }
              });
		}else{
				console.log('đã thêm ' + tag + ' khong them lai');	
            };
		$('#tagadd').val('');
      });

    //hàm xử lý hoạt động xóa tag
	function myFunction(obj) {
		console.log(obj.parentElement.id);
		var ulele = obj.parentElement

		// hàm dùng để xóa phần tử trong mảng
		function removeA(arr) {
			var what, a = arguments, L = a.length, ax;
			while (L > 1 && arr.length) {
				what = a[--L];
				while ((ax= arr.indexOf(what)) !== -1) {
					arr.splice(ax, 1);
				}
			}
			return arr;
		};

		//lấy tên Tag bị xóa
		var nametag;
		ulele.childNodes.forEach( 
  			function(currentValue) { 
  				if(currentValue.nodeName == "A"){
	  				nametag = (currentValue.childNodes[0]);
	  				}
  			}
		);
		console.log(nametag);
		tagAction.push({"location":"edit","name":"remove","tag":nametag.nodeValue.trim(),"timeClient":getTimeClient()});
		console.log('tagAction ' + JSON.stringify(tagAction));
		//Xóa phần tử trong mảng ID
		removeA(taglistid, ulele.id);
		//Thêm vảo mảng đã xóa
		removeTaglist.push[ulele.id];
		ulele.remove();
	};
</script>
 <script>
 	const saveButton = document.getElementById('saveEditButton');
var data = {{{note.description}}};
var blocks = data.blocks;
    var editor = new EditorJS({
		holder:  '{{note._id}}',
		tools: tool,
		i18n: il8n,
		data: {blocks},
		onReady: function(){
			editoronReady();
			//saveButton.click();
		},
      onChange: function() {
        console.log('something changed');
      }
	});
</script>

<script>
	<!-- thêm code gửi dữ liệu khi nhấn nút -->	 
    saveButton.addEventListener('click', function () {
      editor.save().then((savedData) => {
        cPreview.show(savedData, document.getElementById("output"));
		var title = $('input[name="title"]').val();
        $.ajax({
              type : 'PUT', //Sử dụng kiểu gửi dữ liệu POST
              url : '/notes/edit-note/{{note._id}}', //gửi dữ liệu sang trang data.php
              data : {"title": title, "description":JSON.stringify(savedData),"tag":taglistid,"tagAction":tagAction},//dữ liệu sẽ được gửi
              success : function(data)  // Hàm thực thi khi nhận dữ liệu được từ server
                        { 
                           if(data == 'false') 
                           {
                             alert('Không có người dùng');
                           }else{
                             window.location = "/notes";
							 			console.log('Gửi thành công' + title);
                           }
                        }
              });
      });
	  removeTaglist.forEach(async (idtag) => {
			  $.ajax({
					type : 'POST', //Sử dụng kiểu gửi dữ liệu POST
					url : '/tag/removeNote', //gửi dữ liệu sang trang data.php
					data : {"tagid":  ulele.id,"noteid":  nodeid },//dữ liệu sẽ được gửi
					success : function(data)  // Hàm thực thi khi nhận dữ liệu được từ server
								{ 
									 console.log(data);
                           if(data == 'false') 
                           {
                             alert('Không có người dùng');
                           }else{
                           	if(data.loi == "101" ){
                           		alert("Có lỗi xảy ra");
                           		console.log(data.errors);
                           		window.location = "/notes/add"
                           	} else {
                           	alert("Về Note");
                           	console.log('Gửi thành công' + title);
							 			window.location = "/notes";
								}}},


					error: function(request,msg,error) {
							console.log("Xoa lỗi " + error );
						}
					  });
			});

	});
  </script>
